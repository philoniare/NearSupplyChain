import { context, u128, PersistentVector } from "near-sdk-as";
import { AccountId, ONE_NEAR, asNEAR, XCC_GAS } from "../../utils";

export enum ItemState {
    Harvested,  // 0
    Processed,  // 1
    Packed,     // 2
    ForSale,    // 3
    Sold,       // 4
    Shipped,    // 5
    Received,   // 6
    Purchased   // 7
}

@nearBindgen
export class Product {
    sku: i32;  // Stock Keeping Unit (SKU)
    upc: i32; // Universal Product Code (UPC), generated by the Farmer, goes on the package, can be verified by the Consumer
    ownerID: AccountId;  // address of the current owner as the product moves through 8 stages
    originFarmerID: AccountId; // address of the Farmer
    originFarmName: string; // Farmer Name
    originFarmInformation: string;  // Farmer Information
    originFarmLatitude: string; // Farm Latitude
    originFarmLongitude: string;  // Farm Longitude
    productID: number;  // Product ID potentially a combination of upc + sku
    productNotes: string; // Product Notes
    productPrice: u128; // Product Price
    itemState: ItemState;  // Product State as represented in the enum above
    distributorID: AccountId;  // address of the Distributor
    retailerID: AccountId; // address of the Retailer
    consumerID: AccountId; // address of the Consumer

    constructor(sku: i32, upc: i32, originFarmerID: AccountId, originFarmerName: string, originFarmInformation: string,
                originFarmLatitude: string, originFarmLongitude: string, productNotes: string) {
        this.sku = sku;
        this.upc = upc;
        this.productID = sku + upc;
        this.sku = sku;
        this.productPrice = u128.from('0');
        this.originFarmerID = originFarmerID;
        this.originFarmName = originFarmerName;
        this.originFarmInformation = originFarmInformation;
        this.originFarmLatitude = originFarmLatitude;
        this.originFarmLongitude = originFarmLongitude;
        this.productNotes = productNotes;
        this.ownerID = originFarmerID;
        this.itemState = ItemState.Harvested;
        this.distributorID = 'none';
        this.retailerID = 'none';
        this.consumerID = 'none';
    }

    public toString(): string {
        return `Product ${this.sku}`;
    }
}
